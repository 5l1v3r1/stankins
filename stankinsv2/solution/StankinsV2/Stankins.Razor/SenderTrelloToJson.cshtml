@using  System.Data;
@using System;
@using System.Linq;
@using Stankins.Interfaces;
@using System.Collections.Generic;
@using RazorLight
@using Stankins.Razor
@using System.Text;

@inherits TemplatePage<IDataToSent>
@{

    var lists = Model.FindAfterName("list").Value;
    var cards = Model.FindAfterName("card").Value;
    var comments = Model.FindAfterName("comment").Value;
    var nl = Environment.NewLine;



}

@functions{


    class List
    {

        public string Id;
        public string Name;
        public Dictionary<string, Card> Cards = new Dictionary<string, Card>();

    }

    class Card
    {
        public string Id;
        public string Name;
        public Dictionary<string, Comment> Comments = new Dictionary<string, Comment>();


    }

    class Comment
    {
        public string Id;
        public string Name;

    }
}
@{
    var tablesList = new Dictionary<string, List>();
    foreach (DataRow table in lists.Rows)
    {
        var l = new List();
        l.Id = table["id"].ToString();
        l.Name = table["name"].ToString();

        tablesList.Add(l.Id, l);
    }
    foreach (DataRow card in cards.Rows)
    {
        var c = new Card();
        c.Id = card["id"].ToString();
        c.Name = card["name"].ToString();
        var idList = card["idlist"].ToString();
        tablesList[idList].Cards.Add(c.Id, c);
    }
    foreach (DataRow comment in comments.Rows)
    {
        var c = new Comment();
        c.Id = comment["id"].ToString();
        c.Name = comment["name"].ToString();
        var idCard = comment["idcard"].ToString();
        var idList = comment["idlist"].ToString();
        if (tablesList.ContainsKey(idList))
        {
            var cardsList = tablesList[idList].Cards;
            if (cardsList.ContainsKey(idCard))
            {
                cardsList[idCard].Comments.Add(c.Id, c);
            }
        }
        else
        {
    <text>Cannot found list @idList</text>
    @Raw(nl)
        }



    }

}

@{
    var sb=new StringBuilder();
    sb.AppendLine("{");
    sb.AppendLine("'lists':[");
    var existList=false;
    foreach (var list in tablesList)
    {
        existList=true;
        sb.AppendLine("{ 'name': '"+list.Value.Name+"',");
        sb.AppendLine("'cards':[");
        var existCard=false;
        foreach (var card in list.Value.Cards)
        {
            existCard=true;
            sb.AppendLine("{ 'name': '"+card.Value.Name+"',");
            sb.AppendLine("'comments':[");
            var existComment= false;
            foreach (var comment in card.Value.Comments)
            {
                existComment=true;
                sb.AppendLine("");
                sb.Append("{ 'name': '"+comment.Value.Name+"'},");
            }

            if(existComment){
                sb.Length=sb.Length-1;
            }
            sb.AppendLine("]");//end comments
            sb.Append("},");//end card
        }
        if(existCard){
            sb.Length=sb.Length-1;
        }
        sb.AppendLine("]");//end cards
        sb.Append("},");//end list
    }
    if(existList){
        sb.Length=sb.Length-1;
    }
    sb.AppendLine("]");//end lists
    sb.Append("}");//end lists

}
@Raw(sb.ToString())
