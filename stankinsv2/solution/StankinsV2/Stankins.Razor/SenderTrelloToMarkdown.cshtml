@using  System.Data;
@using System;
@using System.Linq;
@using Stankins.Interfaces;
@using System.Collections.Generic;
@using RazorLight
@using Stankins.Razor

@inherits TemplatePage<IDataToSent>
@{

    var lists = Model.FindAfterName("list").Value;
    var cards = Model.FindAfterName("card").Value;
    var comments = Model.FindAfterName("comment").Value;
    var nl = Environment.NewLine;



}
<div></div>

@functions{


    class List
    {

        public string Id;
        public string Name;
        public Dictionary<string, Card> Cards = new Dictionary<string, Card>();

    }

    class Card
    {
        public string Id;
        public string Name;
        public Dictionary<string, Comment> Comments = new Dictionary<string, Comment>();


    }

    class Comment
    {
        public string Id;
        public string Name;

    }
}
@{
    var tablesList = new Dictionary<string, List>();
    foreach (DataRow table in lists.Rows)
    {
        var l = new List();
        l.Id = table["id"].ToString();
        l.Name =table["name"].ToString();

        tablesList.Add(l.Id, l);
    }
	foreach(DataRow card in cards.Rows){
		var c = new Card();
        c.Id = card["id"].ToString();
        c.Name =card["name"].ToString();
		var idList=card["idlist"].ToString();
        tablesList[idList].Cards.Add(c.Id,c);
	}
	foreach(DataRow comment in comments.Rows){
		var c = new Comment();
        c.Id = comment["id"].ToString();
        c.Name =comment["name"].ToString();
		var idCard=comment["idcard"].ToString();
		var idList=comment["idlist"].ToString();
		//tablesList[idList].Cards[idCard].Comments.Add(c.Id,c);

	}

}
@tablesList.Count()
@{
    foreach(var list in tablesList){
    <text># </text>  @list.Value.Name
    @Raw(nl)
	foreach(var card in list.Value.Cards){
    <text>## </text>  @card.Value.Name
    @Raw(nl)
	}
    @Raw(nl)
	}
}

<small>
    Autogenerated with the Razor .cshtml file @nameof(SenderTrelloToMarkdown) at @DateTime.Now.ToString("yyyy MMM dd HH:mm:ss")
</small>